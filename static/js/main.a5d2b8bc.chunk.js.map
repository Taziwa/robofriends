{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearchChange","event","target","value","componentDidMount","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"sMAceA,MAZFC,IAAwB,IAAvB,KAACC,EAAI,MAAEC,EAAK,GAAEC,GAAGH,EAC3B,OACII,IAAAC,cAAA,OAAKC,UAAU,uDACXF,IAAAC,cAAA,OAAKE,IAAI,SAASC,IAAK,wBAAwBL,cAC/CC,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCcLO,MAnBET,IAAiB,IAAhB,OAAEU,GAAQV,EAExB,OACII,IAAAC,cAAA,WACMK,EAAOC,IAAI,CAACC,EAAMC,IAEpBT,IAAAC,cAACN,EAAI,CACDe,IAAKD,EACLV,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,WCGlBa,MAdGf,IAAkC,IAAjC,YAACgB,EAAW,aAAEC,GAAajB,EAC1C,OACII,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,SACIC,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAYH,MCCbI,MARCC,GAERlB,IAAAC,cAAA,OAAKkB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,UCHnB,MAAMC,UAAqBC,YACvBC,YAAYR,GACRS,MAAMT,GACNU,KAAKC,MAAQ,CACTC,UAAU,GAIlBC,kBAAkBC,EAAOC,GACrBL,KAAKM,SAAS,CAAEJ,UAAU,IAK9BK,SACI,OAAIP,KAAKC,MAAMC,SACJ9B,IAAAC,cAAA,UAAI,4BAER2B,KAAKV,MAAMK,UAIXC,Q,MCff,MAAMY,UAAYX,YACdC,cACIC,QAAO,KAcXU,eAAkBC,IACdV,KAAKM,SAAS,CAAEtB,YAAa0B,EAAMC,OAAOC,SAd1CZ,KAAKC,MAAQ,CACXvB,OAAQ,GACRM,YAAa,IAInB6B,oBACIC,MAAM,8CACLC,KAAKC,GAAUA,EAASC,QACxBF,KAAKG,IAASlB,KAAKM,SAAS,CAAE5B,OAAQwC,MAU3CX,SACI,MAAM,OAAE7B,EAAM,YAAEM,GAAgBgB,KAAKC,MAC/BkB,EAAiBzC,EAAO0C,OAAOC,GAC1BA,EAAMpD,KAAKqD,cAAcC,SAASvC,EAAYsC,gBAGzD,OAAQ5C,EAAO8C,OAGPpD,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBF,IAAAC,cAACU,EAAS,CAACE,aAAee,KAAKS,iBAC/BrC,IAAAC,cAACgB,EAAM,KACHjB,IAAAC,cAACuB,EAAY,KACVxB,IAAAC,cAACI,EAAQ,CAACC,OAAQyC,OAPlC/C,IAAAC,cAAA,UAAI,YAiBAmC,QC3CAiB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,KAAK/C,IAAkD,IAAjD,OAAE4D,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAShE,EACpE4D,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,M,MCEDO,IAASC,WAAWC,SAASC,eAAe,SACpD7B,OACHnC,IAAAC,cAACD,IAAMiE,WAAU,KACfjE,IAAAC,cAACmC,EAAG,QAORiB,K","file":"static/js/main.a5d2b8bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200*200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p> \r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card; ","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n \r\n    return(\r\n        <div>\r\n            { robots.map((user, i)=> {\r\n        return ( \r\n            <Card   \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n            />\r\n    )})}\r\n        </div>\r\n    \r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>   \r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots' \r\n                onChange = {searchChange}\r\n            />\r\n        </div>   \r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )   \r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false, // Added semicolon here\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError: true })\r\n    }\r\n    \r\n\r\n\r\n    render() { // Moved the render method inside the class\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          robots: [],\r\n          searchfield: ''  \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users =>{this.setState({ robots: users})});\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => { \r\n        this.setState({ searchfield: event.target.value })\r\n      \r\n        //console.log(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return !robots.length? \r\n           <h1>Loading</h1> :\r\n             (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange ={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                           <CardList robots={filteredRobots}/> \r\n                        </ErrorBoundry>\r\n                        \r\n                    </Scroll>   \r\n                </div>\r\n             );\r\n\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons/css/tachyons.min.css';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}